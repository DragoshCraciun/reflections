Q1:
How did viewing a diff between two versions help you spot the bug?
A1:
Diff checks for differences between two files. The order of the files matter because you
choose to compare what against what, usually the newer version against the older one.
For each difference, diff assings a value "+" or "-". This makes it easier to visualize
what has been removed "-" and what has been added "+".

Q2:
How could having easy access to the entire history of a file make you a more efficient
programmer in the long term?
A2:
Having access the entire history of a file helps you keep track of what changed and when,
and in case that you want to change some part of the code back to a previous version
it means that you won't have to write everything again.

Q3:
What do you think are the pros and cons of manually choosing when to create a commit,
like you do in Git, vs having versions automatically saved, like Google docs does?
A3:
Pros for manual vs automatic commit
-you decide when to commit the changes
-you can add meaningfull titles your each of your commits
-the list of commits will be keept shorter by manualy saving at key moments then by having
 an autosave feature based on time.
-the list of commits will be more usefull since each commit has a logical push
Cons for manual vs automatic commit
-you can forget to push commits at the right moment.

Q4:
Why do you think some version control systems, like Git, allow saving multiple files
in one commit, while others, like Google Docs, treat each file separately?
A4:
Git was build as a type-of version control system for programming. Programs are a compilation
of files interconnected in which changes have to be tracked through out the program. Other
version control systems like Google Docs have been build centered on single-file applications.

Q5:
How can you use the commands git log and git diff to view the history of files?
A5:
git log 	# is a command that displays all the commits that have been pushed regarding
		that file(s).
git log -stat 	# is a command similar to git log but with one extra feaures, it will display
		how many lines have been added and how many have been deleted.
git diff 	# is a command that allows you to check the diffrences between two files.

Q6:
How might using version control make you more confident to make changes that
could break something?
A6:
Version Control saves all the files of all the commits made in the past. That makes it easy
to experiment new features without the fear of losing data.

Q7:
Now that you have your workspace set up, what do you want to try using Git for?
A7:
I want to try using git for developing android applications
